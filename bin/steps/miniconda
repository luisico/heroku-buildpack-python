#!/usr/bin/env bash

runtime-fixer runtime.txt
PYTHON_VERSION=$(cat runtime.txt)
FOO=${PYTHON_VERSION#python-}
PYTHON_VERSION_MAJOR=${FOO%%.*}

# The location of the miniconda binary
MINICONDA="https://repo.continuum.io/miniconda/Miniconda${PYTHON_VERSION_MAJOR}-latest-Linux-x86_64.sh"

if [[ $PYTHON_VERSION =~ ^python-2 ]]; then
  if [[ "$PYTHON_VERSION" != "$LATEST_2" ]]; then
    puts-warn "The latest version of Python 2 is $LATEST_2 (you are using $PYTHON_VERSION, which is unsupported)."
    puts-warn "We recommend upgrading by specifying the latest version ($LATEST_2)."
    echo "       Learn More: https://devcenter.heroku.com/articles/python-runtimes"
  fi
else
  if [[ "$PYTHON_VERSION" != "$LATEST_3" ]]; then
    puts-warn "The latest version of Python 3 is $LATEST_3 (you are using $PYTHON_VERSION, which is unsupported)."
    puts-warn "We recommend upgrading by specifying the latest version ($LATEST_3)."
    echo "       Learn More: https://devcenter.heroku.com/articles/python-runtimes"
  fi

fi

if [[ "$STACK" != "$CACHED_PYTHON_STACK" ]]; then
    puts-step "Stack has changed from $CACHED_PYTHON_STACK to $STACK, clearing cache"
    rm -fr .heroku/python-stack .heroku/python-version .heroku/python .heroku/vendor
fi

if [ -f .heroku/python-version ]; then
  if [ ! "$(cat .heroku/python-version)" = "$PYTHON_VERSION" ]; then
      puts-step "Found $(cat .heroku/python-version), removing"
      rm -fr .heroku/python
  else
    SKIP_INSTALL=1
  fi
fi

if [ ! "$SKIP_INSTALL" ]; then
  puts-step "Installing miniconda for $PYTHON_VERSION"

  mcount "version.python.$PYTHON_VERSION"

  export PATH=".heroku/python/bin:$PATH"

  # Download miniconda
  if ! curl -s $MINICONDA > miniconda.sh; then
    puts-warn "Requested miniconda ($PYTHON_VERSION_MAJOR) is not available."
    puts-warn "Aborting."
    exit 1
  fi

  # Install miniconda
  bash miniconda.sh -p .heroku/python -b | indent
  echo "nomkl" > .heroku/python/conda-meta/pinned
  # Workaround until conda 4.6.0 is released (https://github.com/conda/conda/issues/6576)
  env -u SUDO_UID -u SUDO_GID -u SUDO_COMMAND -u SUDO_USER conda install nomkl --yes
  rm -rf miniconda.sh

  # Install conda dependencies
  if [ -f requirements-conda.txt ]; then
      puts-step "Installing dependencies using Conda"
      # Workaround until conda 4.6.0 is released (https://github.com/conda/conda/issues/6576)
      env -u SUDO_UID -u SUDO_GID -u SUDO_COMMAND -u SUDO_USER conda install --file requirements-conda.txt --yes | indent
  fi

  # Clean up the Miniconda installation environment
  puts-step "Cleaning up Miniconda installation"
  conda clean -pt --yes > /dev/null

  # Record for future reference.
  echo "$PYTHON_VERSION_MAJOR" > .heroku/miniconda
  echo "$PYTHON_VERSION" > .heroku/python-version
  echo "$STACK" > .heroku/python-stack

  hash -r
fi

hash -r
